"""
Pydantic models for api/v1/account routes
"""
from typing import Literal

from pydantic import BaseModel, constr
from spectree import Tag

Account_tag = Tag(name="–ê–∫–∫–∞—É–Ω—Ç", description="üßæüßæ")


class Register200(BaseModel):
    """api/v1/account/register http200 response validation model"""
    status: bool
    title: str = "–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞"


class Register401(BaseModel):
    """api/v1/account/register http401 response validation model"""
    title: str = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"


class RegisterData(BaseModel):
    """api/v1/account/register request validation model"""
    username: constr(
        max_length=24, min_length=6, regex=r"^[a-zA-Z]+([_-]?[a-zA-Z0-9])*$"
    )
    password: constr(
        max_length=24, min_length=8, regex=r"^(?=.*\d)(?=.*[a-zA-Z])[a-zA-Z0-9]{7,}$"
    )


class Login200(BaseModel):
    """api/v1/account/login http200 response validation model"""
    accessToken: str
    refreshToken: str


class LoginData(BaseModel):
    """api/v1/account/login request validation model"""
    username: constr(
        max_length=24, min_length=6, regex=r"^[a-zA-Z]+([_-]?[a-zA-Z0-9])*$"
    )
    password: constr(
        max_length=24, min_length=8, regex=r"^(?=.*\d)(?=.*[a-zA-Z])[a-zA-Z0-9]{7,}$"
    )


class Me200(BaseModel):
    """api/v1/account/me http200 response validation model"""
    username: constr(max_length=24, min_length=6, regex=r"^[a-zA-Z]+([_-]?[a-zA-Z0-9])*$")
    id: int
    rule_level: int
    activated: bool
    partner_id: int
    email: str

class RefreshData(BaseModel):
    """api/v1/account/refresh request validation model"""
    refreshToken: constr(min_length=6)


class Refresh401(BaseModel):
    """api/v1/account/refresh http401 response validation model"""
    title: str = "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω"


class Login401(BaseModel):
    """api/v1/account/login http401 response validation model"""
    title: Literal[
        "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å",
        "–û–∂–∏–¥–∞–π—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ä–µ—Å—É—Ä—Å–∞",
    ]


class Refresh200(BaseModel):
    """api/v1/account/refresh http200 response validation model"""
    accessToken: str
    refreshToken: str
